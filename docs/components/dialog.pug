---
title: Dialog
order: 7
layout: page.pug
tags: terms, conditions, agb, avb
---

include ../mixins.pug

p.paragraph.
  A dialog window can be used to present very specific information (such as terms & conditions) to the user.

.toc
  .toc__title Table of contents
  ul.toc__anchor-navigation
    li.toc__anchor-navigation__item
      a(href='#example').toc__anchor-navigation__link Example
    li.toc__anchor-navigation__item
      a(href='#dialog').toc__anchor-navigation__link Dialog jQuery Plugin docs

.hr

h2.heading.heading--secondary#example Example

+example('/components/demos/dialog.html', { maxHeight: '400' })

.toggle
  .toggle__button(data-info, data-target='#code-dialog')
    +svg('source', ['icon', 'toggle__icon'])
    span See code
  .toggle__content#code-dialog
    .tab-panel(data-tab, data-tab-default='html')
      .tab-panel__header
        .tab-panel__header__tabs
          .tab-panel__header__tab(data-tab-toggle='html') HTML
          .tab-panel__header__tab(data-tab-toggle='js') JavaScript
      .tab-panel__content
        .tab-panel__content__tab(data-tab-content='html')
          p.
            The dialog block represents a dialog dialog.
            It is hidden by default. Add the .is-active
            state to make it visible. When the dialog is
            visible you have to add the .is-dialog-open
            state to the body element of your page to
            hide the main scrollbar.

          .tab-panel__content__tab__fullwidth-content
            .highlight: pre.highlight__listing.hljs: code.js
              include:highlight(pug) ./snippets/dialog.pug

        .tab-panel__content__tab(data-tab-content='js')
          p.paragraph.
            Our jQuery plugin handles of showing and hiding a dialog.

          p.paragraph.
            Activate the functionality with the data-* API
          .tab-panel__content__tab__fullwidth-content
            .highlight: pre.highlight__listing.hljs: code.js
              :highlight
                <a data-dialog="#myModal" ></a>

          p.paragraph.
            Activate the functionality with JavaScript
          .tab-panel__content__tab__fullwidth-content
            .highlight: pre.highlight__listing.hljs: code.js
              :highlight
                $('#myModal').dialog(options)

          h3 Methods
          p.paragraph.
            The <code>toggle</code> method manually toggles the dialog.
          .tab-panel__content__tab__fullwidth-content
            .highlight: pre.highlight__listing.hljs: code.js
              :highlight
                $('#myModal').dialog('toggle')

h3.heading.heading--tertiary UX Checklist
ul.checklist
  li.checklist__item
    +svg('checkmark', ['checklist__item__icon', 'icon'])
    .checklist__item__content.
      On mobile it is presented in full screen.
  li.checklist__item
    +svg('checkmark', ['checklist__item__icon', 'icon'])
    .checklist__item__content.
      The action buttons always stay visible.
  li.checklist__item
    +svg('checkmark', ['checklist__item__icon', 'icon'])
    .checklist__item__content.
      Do not use them for accepting things like terms & conditions â€“ only to display them.

.hr

include:markdown-it ../jsdoc2md/jquery/dialog.md

//- Copyright AXA Versicherungen AG 2015
